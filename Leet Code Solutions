175. Combine Two Tables

select firstname,lastname,city,state from person a left join address b on a.personid=b.personid

176. Second Highest Salary

select max(salary) as secondhighestsalary from employee a where salary<(select max(salary) from employee b);

177. Nth Highest Salary

CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
BEGIN
  RETURN (select distinct(a.salary) as getNthhighestsalary from employee a where n-1=(select count(distinct(b.salary)) 
  from employee b where a.salary<b.salary));
END

178. Rank Scores

select score,dense_rank() over(order by score desc) 'rank' from scores;

180. Consecutive Numbers

select distinct num as consecutivenums from 
(select num, lead(num) over(order by id) as beforenumber,lag(num) over(order by id) as afternumber from logs) D 
where num=beforenumber and beforenumber=afternumber;

181. Employees Earning More Than Their Managers

select b.name as employee from employee a join employee b where a.id=b.managerid and a.salary<b.salary;

182. Duplicate Emails

select email from person group by email having count(email)>1;

183. Customers Who Never Order

select c.name as customers from customers c where id not in (select customerid from orders );

184. Department Highest Salary

select department,employee,salary from (select b.name as department,a.name as employee,salary,
dense_rank() over(partition by departmentid order by salary desc) 'rnk' from employee a join department b on a.departmentid=b.id) d where rnk=1;

185. Department Top Three Salaries

select department,employee,salary from (select b.name as department,a.name as employee,salary,dense_rank() 
over(partition by departmentid order by salary desc) 'rnk' from employee a join department b on a.departmentid=b.id) d where rnk in (1,2,3);

196. Delete Duplicate Emails

delete b from person a, person b where a.email=b.email and a.id<b.id;

197. Rising Temperature

select id from (select id,temperature,recorddate,lag(temperature,1) over(order by recorddate) as nextdaytemperature,
lag(recorddate,1) over() as nextdate from weather) d where nextdaytemperature<temperature and datediff(nextdate,recorddate)=-1;

511. Game Play Analysis I

select player_id,min(event_date) as first_login from activity group by player_id;

512. Game Play Analysis II

select player_id, device_id  from Activity where (player_id, event_date) in ( select player_id, min(event_date) from Activity group by player_id);
    
 534. Game Play Analysis III

select player_id,event_date,sum(games_played) over(partition by player_id order by event_date) as games_played_so_far from activity;

570. Managers with at Least 5 Direct Reports

select  b as name from (select distinct a.name as b,count(*) from employee a,employee b where a.id=b.managerid group by a.name having count(*)>=5) e;

574. Winning Candidate

select name from (select name,count(*) from candidate a join vote b on a.id=b.candidateid group by a.id order by count(*) desc limit 1) z;

577. Employee Bonus

select name,bonus from employee a left join bonus b on a.empid=b.empid where bonus<1000 or bonus is null;

580. Count Student Number in Departments

select dept_name,count(student_id) as student_number from department a 
left outer join student  b on a.dept_id=b.dept_id group by dept_name order by count(student_id) desc;

584. Find Customer Referee

select name from customer where referee_id!=2 or referee_id is null;

585. Investments in 2016


586. Customer Placing the Largest Number of Orders

select customer_number from orders group by customer_number order by count(order_number) desc limit 1;

595. Big Countries

select name,population,area from world where area>=3000000 or population>=25000000;

596. Classes More Than 5 Students

select class from courses group by class having count(student)>=5;

603. Consecutive Available Seats

select seat_id from (select seat_id,lag(free,1) over(order by seat_id asc) as new,free from cinema) a where new=free and free=1
union
select seat_id from (select seat_id,lead(free,1) over(order by seat_id asc) as new,free from cinema) a where new=free and free=1 order by seat_id asc ;

602. Friend Requests II: Who Has the Most Friends

select a as id,count(b) as num from (select accepter_id as a ,requester_id as b from RequestAccepted
union
select requester_id as a ,accepter_id as b from RequestAccepted) m  group by a order by num  desc limit 1; 

1369. Get the Second Most Recent Activity

select username,activity,startdate,enddate from (select username,activity,startdate,enddate,row_number() 
over(partition by username order by startdate desc) as a,count(*) over(partition by username) as d from UserActivity) a where a=2 or d=1;

1270. All People Report to the Given Manager

select employee_id from employees where manager_id in (select min(employee_id) from employees where manager_id=employee_id) and employee_id!=(select min(employee_id) from employees where manager_id=employee_id)
union all
select employee_id from employees where manager_id in (select employee_id from employees where manager_id in (select min(employee_id) from employees where manager_id=employee_id) and employee_id!=(select min(employee_id) from employees where manager_id=employee_id))
union all
select employee_id from employees where manager_id in (select employee_id from employees where manager_id in (select employee_id from employees where manager_id in (select min(employee_id) from employees where manager_id=employee_id) 
and employee_id!=(select min(employee_id) from employees where manager_id=employee_id)));

1294. Weather Type in Each Country

select country_name,'Cold' as Weather_type from weather a join countries b on a.country_id=b.country_id where extract(month from day)=11 group by a.country_id having avg(weather_state)<=15
union all
select country_name,'Hot' as Weather_type from weather a join countries b on a.country_id=b.country_id where extract(month from day)=11 group by a.country_id having avg(weather_state)>=25
union all
select country_name,'Warm' as Weather_type from weather a join countries b on a.country_id=b.country_id where extract(month from day)=11 group by a.country_id having avg(weather_state)>15 and avg(weather_state)<25;

1407. Top Travellers

select name,ifnull(sum(distance),0) as travelled_distance from users a left join rides b on a.id=b.user_id group by name order by sum(distance) desc,name asc;

1890. The Latest Login in 2020


select user_id,max(time_stamp) as last_stamp from logins where extract(year from time_stamp)=2020 group by user_id; 

1571. Warehouse Manager

select distinct name as warehouse_name,sum(units*(width*length*height)) as volume from warehouse a join products b on a.product_id=b.product_id group by name;

1517. Find Users With Valid E-Mails

select * from users where mail like '%leetcode.com' and mail not like '.%' and mail not like '%#%';

1532. The Most Recent Three Orders

select name as customer_name,customer_id,order_id,order_date from (select name,a.customer_id,order_id,order_date,dense_rank() over(partition by a.customer_id order by order_date desc) as 'rnk' from customers a join orders b on a.customer_id=b.customer_id)
m where rnk<=3 order by customer_name asc,customer_id asc,order_date desc;

1501. Countries You Can Safely Invest In
 
select  country from (select distinct c.name as country,avg(duration) over(partition by c.name) as test from person a join calls b on a.id=b.caller_id or a.id=b.callee_id join country c on left(phone_number,3)=c.country_code) z  where test>(select avg(duration) from person m join calls n on m.id=n.caller_id or m.id=n.callee_id);

1468. Calculate Salaries

select company_id,employee_id,employee_name,
case 
when max(salary) over (partition by company_id )<1000 then round(salary,0)
when max(salary) over (partition by company_id ) between 1000 and 10000 then round(salary-(salary*0.24),0)
when max(salary) over (partition by company_id )>10000 then round(salary-(salary*0.49),0)
end as salary 
from salaries order by company_id asc , employee_id asc;

1204. Last Person to Fit in the Bus

select person_name from (select person_name,turn,sum(weight) over(order by turn) as total_weight from queue) a 
where total_weight<=1000 order by turn desc limit 1;

1212. Team Scores in Football Tournament

select team_id,team_name,
sum(case 
when team_id=host_team and  host_goals>guest_goals then 3
when team_id=guest_team and  host_goals<guest_goals then 3
when team_id=host_team and host_goals=guest_goals then 1
when team_id=guest_team and host_goals=guest_goals then 1
else 0

end) as num_points
from teams a left join matches b on a.team_id=b.host_team or a.team_id=b.guest_team
group by team_id order by num_points desc,team_id asc;


2228. Users With Two Purchases Within Seven Days
 
select distinct user_id from (select user_id,purchase_date,
lag(purchase_date) over(partition by user_id order by purchase_date) as temp from purchases) x  where datediff(purchase_date,temp)<=7;


2230. The Users That Are Eligible for Discount

CREATE PROCEDURE getUserIDs(startDate DATE, endDate DATE, minAmount INT)
BEGIN
select distinct user_id from purchases where (time_stamp between startDate and endDate) and amount>=minAmount order by user_id;
END

2205. The Number of Users That Are Eligible for Discount


CREATE FUNCTION getUserIDs(startDate DATE, endDate DATE, minAmount INT) RETURNS INT
BEGIN
  RETURN (
select count(distinct user_id) as user_count from purchases where (time_stamp between startDate and endDate) and amount>=minamount  
  );
END

1978. Employees Whose Manager Left the Company

select distinct employee_id from employees a  where salary<30000 and manager_id not in 
(select employee_id from employees b ) order by employee_id;

1939. Users That Actively Request Confirmation Messages

select distinct a.user_id from confirmations a join confirmations b on a.user_id=b.user_id 
and a.time_stamp<b.time_stamp where timestampdiff(second,a.time_stamp,b.time_stamp)<=86400;

1873. Calculate Special Bonus

select employee_id,
case
when employee_id%2!=0 and name not like 'M%' then salary 
else 0
end as bonus
from employees 

1809. Ad-Free Sessions

select distinct session_id from playback d where session_id not in
(select session_id from playback a join ads b on a.customer_id=b.customer_id where timestamp between start_time and end_time);

1795. Rearrange Products Table

select product_id as product_id,store as store, a as price  from (select product_id,'store1' as store,store1 as a from products
union 
select product_id,'store2' as store,store2  as a from products
union 
select product_id,'store3' as store,store3 as a from products) m where a is not null order by product_id;

1179. Reformat Department Table

select id,
sum(case when month='Jan' then revenue else null end) as Jan_Revenue,
sum(case when month = 'feb' then revenue else null end) as Feb_Revenue,
sum(case when month = 'mar' then revenue else null end) as Mar_Revenue,
sum(case when month = 'apr' then revenue else null end) as Apr_Revenue,
sum(case when month = 'may' then revenue else null end) as May_Revenue,
sum(case when month = 'jun' then revenue else null end) as Jun_Revenue,
sum(case when month = 'jul' then revenue else null end) as Jul_Revenue,
sum(case when month = 'aug' then revenue else null end) as Aug_Revenue,
sum(case when month = 'sep' then revenue else null end) as Sep_Revenue,
sum(case when month = 'oct' then revenue else null end) as Oct_Revenue,
sum(case when month = 'nov' then revenue else null end) as Nov_Revenue,
sum(case when month = 'dec' then revenue else null end) as Dec_Revenue
from department
group by id
order by id;

1421. NPV Queries

select a.id,a.year,ifnull(npv,0) as npv from queries a left join NPV b on a.id=b.id and a.year=b.year order by a.id;

1789. Primary Department for Each Employee

select employee_id,department_id from employee where primary_flag='Y'
union
select employee_id,department_id from (select employee_id,department_id,count(*) from employee group by employee_id having count(*)=1) d;

1777. Product's Price for Each Store

select product_id,
max(case when store='store1' then price  end) as store1,
max(case when store='store2' then price  end) as store2,
max(case when store='store3' then price  end) as store3
from products
group by product_id
order by product_id;

1731. The Number of Employees Which Report to Each Employee

select distinct a.employee_id,a.name,count(*) as reports_count,round(avg(b.age),0) as
average_age from employees a join employees b on a.employee_id=b.reports_to group by a.employee_id order by a.employee_id ;


select user_id,count(follower_id) as followers_count from followers group by user_id order by user_id;

1596. The Most Frequently Ordered Products for Each Customer


select a as customer_id,b as product_id,d as product_name from 
(select b.customer_id as a,c.product_id as b ,c.product_name as d,
dense_rank() over(partition by b.customer_id order by count(b.product_id) desc) as rnk 
from  orders b join products c on b.product_id=c.product_id group by b.customer_id, c.product_id) d where rnk=1;

2175. The Change in Global Rankings

select m.team_id as team_id,m.name as name,cast(m.rnk as SIGNED)-cast(b.rnk1 as SIGNED) as rank_diff from

(select team_id,name,row_number() over(order by points desc) as rnk from teampoints) m

join 

(select a.team_id,name,row_number() over(order by sum(points+points_change) desc) 
as rnk1 from teampoints a join pointschange b on a.team_id=b.team_id group by a.team_id) b on m.team_id=b.team_id;



select ifnull(round(count(distinct requester_id,accepter_id)/(count(distinct sender_id,send_to_id )),2),0.00)
as accept_rate from friendrequest, requestaccepted

597. Friend Requests I: Overall Acceptance Rate


select ifnull(round(count(distinct requester_id,accepter_id)/count(distinct sender_id,send_to_id),2),0.00)
as accept_rate from FriendRequest,RequestAccepted;

